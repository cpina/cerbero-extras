# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import shutil

from cerbero.utils import shell

class Recipe(recipe.Recipe):
    name = 'longomatch'
    version = '0.17.5'
    licenses = [License.GPL]
    remotes = {'origin': 'git://git.gnome.org/longomatch'}
    config_sh = 'sh autogen.sh'
    commit = 'origin/master'
    deps = ['gstreamer', 'gst-plugins-base', 'mono-addins', 'db4o', 'gtk-sharp']

    platform_files_libs = {
        Platform.DARWIN: ['libcesarplayer'],
        Platform.WINDOWS: ['libcesarplayer'],
    }
    files_lang = ['longomatch']
    files_share = ['share/longomatch']
    platform_files_bin = {
        Platform.DARWIN: ['%(sdir)s/LongoMatchGtk'],
    }
    platform_files_bins = {
        Platform.WINDOWS: ['LongoMatch'],
        Platform.LINUX: ['longomatch']
    }

    platform_files_share = {
        Platform.LINUX: ['share/applications/longomatch.desktop',
                         'share/icons/hicolor/48x48/apps/longomatch.png',
                         'share/icons/hicolor/scalable/apps/longomatch.svg']
    }

    def prepare(self):
        if self.config.target_platform in [Platform.WINDOWS, Platform.DARWIN]:
            search_paths = ['lib/longomatch', 'lib/cli/Db4objects.Db4o-8.0']
            search_paths = [os.path.join(self.config.prefix, f) for f in search_paths]
            self.new_env['MONO_PATH'] = ':'.join(search_paths)
            self.new_env['AS'] = 'as -arch i386'
            cc = os.environ.get('CC', 'gcc')
            self.new_env['CC'] = '%s %s' % (cc, os.environ['CFLAGS'])

    def post_install(self):
        if self.config.target_platform == Platform.WINDOWS:
            shutil.move(os.path.join(self.config.prefix, 'lib', 'bin', 'libcesaplayer-0.dll'),
                os.path.join(self.config.prefix, 'bin', 'libcesaplayer-0.dll'),
            )
        if self.config.target_platform in [Platform.WINDOWS, Platform.DARWIN]:
            libdir = os.path.join(self.config.prefix, 'lib')
            longomatchlib = os.path.join(libdir, 'longomatch')
            libcesarplayer = os.path.join(longomatchlib,
                'libcesarplayer.0%(srext)s' % self.extensions)
            shutil.copy(libcesarplayer, libdir)
            binary = os.path.join(self.config.prefix, self.extensions['sdir'],
                    'LongoMatchGtk')
            assembly = os.path.join(longomatchlib, 'LongoMatchGtk.exe')
            mkbundle = 'mkbundle -o %s %s --config %s --deps ' % (binary, assembly,
                    os.path.join(self.config.prefix, 'etc', 'mono', 'config'))
            extra_assemblies = []
            for assembly in extra_assemblies:
                mkbundle += ' %s' % os.path.join(self.config.prefix, assembly)
            shell.call(mkbundle)
