# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import shutil
from cerbero.utils import shell

class Recipe(recipe.Recipe):
    name = 'mono'
    version = '3.2.3'
    licenses = [License.LGPL]
    stype = SourceType.CUSTOM
    btype = BuildType.CUSTOM

    files_mono = [
        'bin/atksharpglue-2.dll',
        'bin/dmcs',
        'bin/dmcs.bat',
        'bin/gmcs',
        'bin/gmcs.bat',
        'bin/gacutil',
        'bin/gdksharpglue-2.dll',
        'bin/gladesharpglue-2.dll',
        'bin/glibsharpglue-2.dll',
        'bin/gluezilla.dll',
        'bin/gtksharpglue-2.dll',
        'bin/intl.dll',
        'bin/mkbundle',
        'bin/libmonosgen-2.0.dll',
        'bin/mono-2.0.dll',
        'bin/mono.exe',
        'bin/MonoPosixHelper.dll',
        'bin/pangosharpglue-2.dll',
        'bin/sqlite3.dll',
        'bin/xbuild',
        'bin/zlib1.dll',
        'etc/mono',
        'lib/mono/gac',
        'lib/mono/4.0',
        'lib/mono/4.5',
        'lib/mono/gtk-sharp-2.0',
    ]

    files_mono_devel = [
        'include/mono-2.0',
        'lib/libmono-2.0.a',
        'lib/pkgconfig/glade-sharp-2.0.pc',
        'lib/pkgconfig/glib-sharp-2.0.pc',
        'lib/pkgconfig/gtk-sharp-2.0.pc',
        'lib/pkgconfig/mono-2.pc',
        'lib/pkgconfig/mono-addins.pc',
        'lib/pkgconfig/mono.pc',
    ]

    def prepare(self):
        if self.config.target_platform != Platform.WINDOWS:
            raise InvalidRecipeException()

    def install(self):
        mono_prefix_dir = 'c:/Program Files (x86)/Mono-3.2.3'
        import pdb; pdb.set_trace()
        for f in self.files_mono:
            src = os.path.join(mono_prefix_dir, f)
            dest = os.path.join(self.config.prefix, f)
            if os.path.isdir(src):
                shell.copy_dir (src, dest)
            elif os.path.isfile(src):
                if not os.path.exists(os.path.dirname(dest)):
                    os.makedirs(os.path.dirname(dest))
                shutil.copy(src, dest)

        monodir = os.path.join(self.config.prefix, 'lib', 'mono')
        for d in ['atk', 'gdk', 'glade', 'glib', 'gtk', 'pango']:
            gtkdir = os.path.join(monodir, 'gtk-sharp-2.0')
            apath = os.path.join(gtkdir, '%s-sharp.dll' % d)
            shell.call('gacutil -i %s' % apath)
