# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import shutil
from cerbero.utils import shell

class Recipe(recipe.Recipe):
    name = 'mono'
    version = '3.2.3'
    licenses = [License.LGPL]
    stype = SourceType.CUSTOM
    btype = BuildType.CUSTOM

    _mono = [
        'bin/al',
        'bin/dmcs',
        'bin/dmcs.bat',
        'bin/gmcs',
        'bin/gmcs.bat',
        'bin/gacutil',
        'bin/gluezilla.dll',
        'bin/intl.dll',
        'bin/libmonosgen-2.0.dll',
        'bin/mono-2.0.dll',
        'bin/mono.exe',
        'bin/libMonoPosixHelper.dll',
        'bin/resgen',
        'bin/sqlite3.dll',
        'bin/xbuild',
        'bin/zlib1.dll',
        'etc/mono',
        'lib/mono/gac',
        'lib/mono/4.0',
        'lib/mono/4.5',
        'include/mono-2.0',
        'lib/libmono-2.0.a',
        'lib/libmono-2.0.dll.a',
        'lib/libmono-2.0.la',
        'lib/libmonosgen-2.0.a',
        'lib/libmonosgen-2.0.dll.a',
        'lib/libmonosgen-2.0.la',
        'lib/pkgconfig/mono-2.pc',
        'lib/pkgconfig/mono-addins.pc',
        'lib/pkgconfig/mono.pc',
    ]

    files_bin = ['mono']
    files_libs = ['libmonosgen-2.0']
    files_posix_helper = ['%(sdir)s/libMonoPosixHelper%(srext)s']
    files_config = ['etc/mono/config']

    def prepare(self):
        if self.config.target_platform != Platform.WINDOWS:
            raise InvalidRecipeError()

    def install(self):
        mono_prefix_dir = 'c:/Program Files (x86)/Mono-3.2.3'
        for f in self._mono:
            src = os.path.join(mono_prefix_dir, f)
            dest = os.path.join(self.config.prefix, f)
            if os.path.isdir(src):
                shell.copy_dir (src, dest)
            elif os.path.isfile(src):
                if not os.path.exists(os.path.dirname(dest)):
                    os.makedirs(os.path.dirname(dest))
                shutil.copy(src, dest)
