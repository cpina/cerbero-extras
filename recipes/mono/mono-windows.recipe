# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import shutil
import cerbero.utils.messages as m
from cerbero.utils import shell

class Recipe(recipe.Recipe):
    name = 'mono'
    version = '3.10.0'
    licenses = [License.LGPL]
    stype = SourceType.TARBALL
    btype = BuildType.CUSTOM
    url = 'http://www.dynamicdevices.co.uk/downloads/Mono-3.10.0.zip'
    tarball_dirname = 'Mono-%(version)s'

    _mono = [
        'bin/al',
        'bin/dmcs',
        'bin/dmcs.bat',
        'bin/gmcs',
        'bin/gmcs.bat',
        'bin/gacutil',
        'bin/gluezilla.dll',
        'bin/libmonosgen-2.0.dll',
        'bin/libmonoboehm-2.0.dll',
        'bin/mono-boehm.exe',
        'bin/mono-sgen.exe',
        'bin/libMonoPosixHelper.dll',
        'bin/resgen',
        'bin/sqlite3.dll',
        'bin/xbuild',
        'etc/mono',
        'lib/mono',
        'include/mono-2.0',
        'lib/libmono-2.0.a',
        'lib/libmono-2.0.dll.a',
        'lib/libmono-2.0.la',
        'lib/libmonosgen-2.0.a',
        'lib/libmonosgen-2.0.dll.a',
        'lib/libmonosgen-2.0.la',
        'lib/pkgconfig/mono-2.pc',
        'lib/pkgconfig/mono-addins.pc',
        'lib/pkgconfig/mono.pc',
    ]

    files_bins = ['mono-sgen']
    files_libs = ['libmonosgen-2.0']
    files_posix_helper = ['%(sdir)s/libMonoPosixHelper%(srext)s']
    files_config = ['etc/mono/config']

    def prepare(self):
        if self.config.target_platform != Platform.WINDOWS:
            raise InvalidRecipeError()

    def install(self):
        for f in self._mono:
            src = os.path.join(self.build_dir, f)
            dest = os.path.join(self.config.prefix, f)
            if os.path.isdir(src):
                shell.copy_dir (src, dest)
            elif os.path.isfile(src):
                if not os.path.exists(os.path.dirname(dest)):
                    os.makedirs(os.path.dirname(dest))
                shutil.copy(src, dest)
            if os.path.isfile(src):
                if not os.path.splitext(dest)[1] in ['.dll', '.a', '.la', '.pc', '.exe']:
                    shell.replace(dest, {'C:/cygwin/usr/local': self.config.prefix})
                    shell.replace(dest, {'/usr/local': self.config.prefix})
        # Remove broken links
        shutil.copy (os.path.join(self.config.prefix, 'bin', 'mono-sgen.exe'),
            os.path.join(self.config.prefix, 'bin', 'mono.exe'))
        for e in ['a', 'la', 'dll.a']:
            shutil.copy (os.path.join(self.config.prefix, 'lib', 'libmonosgen-2.0.' + e),
                         os.path.join(self.config.prefix, 'lib', 'libmono-2.0.' + e))
        shutil.copy(self.relative_path('config'), os.path.join(self.config.prefix, 'etc', 'mono'))
