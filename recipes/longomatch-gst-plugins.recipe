import shutil
from cerbero.build.cookbook import CookBook


class Recipe(recipe.Recipe):
    name = 'longomatch-gstreamer-plugins'
    version = '1.0.0'
    stype = SourceType.GIT
    remotes = {'github': 'https://github.com/ylatuya/longomatch.git',
               'gnome': 'git://git.gnome.org/longomatch'}
    commit = 'github/master'
    deps = ['longomatch']
    config_sh = 'sh autogen.sh'
    make_install = 'make -C LongoMatch.Plugins.GStreamer install'
    deps = ['longomatch', 'gst-plugins-bad', 'gst-plugins-ugly', 'gst-ffmpeg']

    files_longomatch = [
        'lib/longomatch/plugins/LongoMatch.Plugins.GStreamer'
    ]

    _files = ['a52dec:libs', 'opencore-amr:libs', 'libmad:libs', 'libmpeg2:libs',
              'faad2:libs', 'libdca:libs', 'x264:libs',
              'gst-ffmpeg:plugins_codecs_restricted',
              'gst-plugins-ugly:plugins_codecs_restricted',
              'gst-plugins-bad:plugins_codecs_restricted']

    def prepare(self):
        self.repo_dir = os.path.join(self.config.local_sources, 'longomatch')

    def post_install(self):
        cookbook = CookBook(self.config)
        recipes_files = {}
        for r in self._files:
            l = r.split(':')
            recipes_files[l[0]] = l[1:]

        files = []
        for recipe_name, categories in recipes_files.iteritems():
            recipe = cookbook.get_recipe(recipe_name)
            if len(categories) == 0:
                rfiles = recipe.dist_files_list()
            else:
                rfiles = recipe.files_list_by_categories(categories)
            files.extend(rfiles)

        pluginsdir = os.path.join(self.config.prefix, self.files_longomatch[0], 'gstreamer-0.10')
        if not os.path.exists(pluginsdir):
            os.makedirs (pluginsdir)
        for f in files:
            shutil.copy(os.path.join(self.config.prefix, f), pluginsdir)
