
import shutil
from cerbero.utils import shell

class Recipe(recipe.Recipe):
    name = 'gtk-sharp'
    version = '2.12.10'
    licenses = [License.LGPL]
    stype = SourceType.CUSTOM
    btype = BuildType.CUSTOM

    files_glue = [
        'bin/atksharpglue-2.dll',
        'bin/gdksharpglue-2.dll',
        'bin/gladesharpglue-2.dll',
        'bin/glibsharpglue-2.dll',
        'bin/gtksharpglue-2.dll',
        'bin/pangosharpglue-2.dll',
    ]

    files_mono = [
        'lib/gtk-sharp-2.0/atk-sharp.dll',
        'lib/gtk-sharp-2.0/gtk-sharp.dll',
        'lib/gtk-sharp-2.0/gdk-sharp.dll',
        'lib/gtk-sharp-2.0/pango-sharp.dll',
        'lib/gtk-sharp-2.0/glib-sharp.dll',
        'lib/gtk-sharp-2.0/glade-sharp.dll',
    ]

    files_mono_devel = [
        'lib/pkgconfig/glade-sharp-2.0.pc',
        'lib/pkgconfig/glib-sharp-2.0.pc',
        'lib/pkgconfig/gtk-sharp-2.0.pc',
    ]

    def prepare(self):
        if self.config.target_platform != Platform.WINDOWS:
            raise InvalidRecipeError()

    def install(self):
        mono_prefix_dir = os.path.join(os.environ['PROGRAMFILES(X86)'], "mono")
        if not os.path.exists(mono_prefix_dir):
            m.error("ERROR: Mono 3.12 not found!")
            raise FatalError("Mono 3.12 not found!")

        for f in self.files_glue + self.files_mono + self.files_mono_devel:
            src = os.path.join(mono_prefix_dir, f)
            dest = os.path.join(self.config.prefix, f)
            if os.path.isdir(src):
                shell.copy_dir (src, dest)
            elif os.path.isfile(src):
                if not os.path.exists(os.path.dirname(dest)):
                    os.makedirs(os.path.dirname(dest))
                shutil.copy(src, dest)

        for d in self.files_mono:
            shell.call('gacutil -i %s' % os.path.join(self.config.prefix, d))
